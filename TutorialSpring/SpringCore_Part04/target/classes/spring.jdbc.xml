<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd ">


	<!-- burada setter injection yapıyoruz. ilgili properties'i okumamızı sağlıyor. 
		(PropertyPlaceholderConfigurer -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>jdbc.properties</value>
		</property>
	</bean>

	<!-- ilgili konfigurasyon bilgilerini okuyup, spring'e veriyoruz. DataSource 
		objemiz oluşuyor. -->
	<bean id="dataSourceId"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- hazırladıgımız konfigurasyonu personDAO'ya veriyoruz. DataSource objesini 
		DAO class'ına inject ediyoruz -->
	<bean id="personDAOImplId" class="dao.PersonJDBCDAOImpl">
		<constructor-arg name="dataSource" ref="dataSourceId" />

	</bean>
</beans>
